name: Build Android App Bundle

on:
  workflow_dispatch:
  push:
    branches: [ main ]
    paths:
      - 'android/**'
      - 'src/**'
      - 'shared/**'
      - 'package.json'

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Verify project structure
      run: |
        echo "Current directory:"
        pwd
        echo "Project structure:"
        ls -la
        echo "Source directory:"
        ls -la src/
        echo "Node version:"
        node --version
        echo "NPM version:"
        npm --version
      
    - name: Debug and find index.html
      run: |
        echo "🔍 DEBUGGING: Finding all index.html files..."
        find . -name "index.html" -not -path "./node_modules/*" 2>/dev/null || echo "No index.html found"
        echo ""
        echo "📁 Checking directory contents:"
        echo "Root level:"
        ls -la | head -10
        echo ""
        echo "Client directory exists?"
        ls -la client/ 2>/dev/null && echo "✓ client/ exists" || echo "✗ client/ missing"
        echo ""
        echo "Source directory exists?"
        ls -la src/ 2>/dev/null && echo "✓ src/ exists" || echo "✗ src/ missing"
        
    - name: Build web assets  
      run: |
        echo "Building web assets..."
        echo "✅ Using clean vite.config.ts with correct alias configuration"
        echo "📁 Structure: index.html in root, App.tsx in src/, alias '@' → 'src/'"
        npx vite build --config android-build-only/vite.config.ts --outDir dist/public --emptyOutDir
      
    - name: Sync Capacitor
      run: |
        npx cap sync android
        npx cap copy android
        
    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'
        
    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
      
    - name: Create keystore from secret
      run: |
        echo "${{ secrets.ANDROID_KEYSTORE_BASE64 }}" | base64 -d > android/app/upload.keystore
        
    - name: Build Android App Bundle
      working-directory: android
      env:
        ANDROID_STORE_FILE: app/upload.keystore
        ANDROID_STORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
        ANDROID_KEY_ALIAS: ${{ secrets.ANDROID_KEY_ALIAS }}
        ANDROID_KEY_PASSWORD: ${{ secrets.ANDROID_KEY_PASSWORD }}
      run: ./gradlew bundleRelease --no-daemon
      
    - name: Upload Android App Bundle
      uses: actions/upload-artifact@v4
      with:
        name: android-app-bundle-v2
        path: android/app/build/outputs/bundle/release/app-release.aab
